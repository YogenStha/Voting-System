# Generated by Django 5.2.4 on 2025-08-26 08:18

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.IntegerField(default=0, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('previous_hash', models.CharField(blank=True, max_length=300, null=True)),
                ('nonce', models.IntegerField(default=0)),
                ('difficulty', models.IntegerField(default=4)),
                ('merkle_root', models.CharField(max_length=300)),
                ('current_hash', models.CharField(blank=True, max_length=300, null=True)),
                ('finalized', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['index'],
            },
        ),
        migrations.CreateModel(
            name='Election',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('salt', models.CharField(blank=True, max_length=128, null=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('is_active', models.BooleanField(default=False)),
                ('public_key', models.TextField()),
                ('private_key', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('party_name', models.CharField(max_length=100)),
                ('party_symbol', models.ImageField(upload_to='party_symbols/')),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Revote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_vote_id', models.CharField(max_length=20, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=100, unique=True)),
                ('address', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('contact_number', models.CharField(max_length=15, unique=True)),
                ('student_id', models.CharField(max_length=20, unique=True)),
                ('college', models.CharField(max_length=100, null=True)),
                ('faculty', models.CharField(max_length=100)),
                ('year', models.CharField(max_length=20)),
                ('voter_id', models.CharField(editable=False, max_length=20, unique=True)),
                ('public_key', models.TextField()),
                ('fingerprint', models.CharField(max_length=65, null=True, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='candidates/')),
                ('manifesto', models.TextField()),
                ('candidate_id', models.CharField(max_length=10, unique=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidates', to='chunabE.election')),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='party', to='chunabE.party')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='position', to='chunabE.position')),
            ],
        ),
        migrations.CreateModel(
            name='ElectionResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('votes', models.IntegerField(default=0)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chunabE.candidate')),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chunabE.election')),
            ],
        ),
        migrations.CreateModel(
            name='Eligibility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issued', models.BooleanField(default=False)),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chunabE.election')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('candidate_ciphertext', models.BinaryField()),
                ('aes_key_wrapped', models.BinaryField()),
                ('credential_sig', models.BinaryField()),
                ('serial_commitment', models.CharField(db_index=True, max_length=128)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chunabE.election')),
            ],
        ),
        migrations.CreateModel(
            name='BlockTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tx_hash', models.CharField(max_length=100, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chunabE.block')),
                ('vote', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='chunabE.vote')),
            ],
        ),
        migrations.CreateModel(
            name='VoterCredential',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number_hash', models.CharField(max_length=100, null=True)),
                ('signature', models.TextField(null=True)),
                ('issued_at', models.DateTimeField(auto_now_add=True)),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chunabE.election')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'election')},
            },
        ),
        migrations.AddField(
            model_name='vote',
            name='voter_credential',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chunabE.votercredential'),
        ),
        migrations.CreateModel(
            name='VoteHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voted_at', models.DateTimeField(auto_now_add=True)),
                ('vote_count', models.PositiveIntegerField(default=1)),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chunabE.election')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'election')},
            },
        ),
    ]
